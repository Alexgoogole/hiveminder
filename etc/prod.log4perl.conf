log4perl.logger=WARN, GeneralLogger
log4perl.logger.BTDT.RTM = DEBUG

# General
log4perl.appender.GeneralLogger=Log::Log4perl::Appender::File
log4perl.appender.GeneralLogger.filename= sub { require Jifty::Util; Jifty::Util->absolute_path("log/server.log") }
log4perl.appender.GeneralLogger.mode=append
log4perl.appender.GeneralLogger.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.GeneralLogger.layout.ConversionPattern=%d %p> %F{1}:%L %M - %m%n
log4perl.appender.GeneralLogger.syswrite=1
log4perl.appender.GeneralLogger.utf8=1

# IM gets its own logfile
log4perl.logger.BTDT.IM = DEBUG, IMLogToFile
log4perl.logger.BTDT.IM.TwitterREST = WARN
log4perl.additivity.BTDT::IM = 0
log4perl.appender.IMLogToFile=Log::Log4perl::Appender::File
log4perl.appender.IMLogToFile.filename= sub { require Jifty::Util; Jifty::Util->absolute_path("log/IM.log") }
log4perl.appender.IMLogToFile.mode=append
log4perl.appender.IMLogToFile.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.IMLogToFile.layout.ConversionPattern=%d %p> %F{1}:%L %M - %m%n
log4perl.appender.IMLogToFile.syswrite=1
log4perl.appender.IMLogToFile.utf8=1

# IMAP gets its own logfile
log4perl.logger.BTDT.IMAP = INFO, IMAPLogToFile
log4perl.additivity.BTDT::IMAP = 0
log4perl.appender.IMAPLogToFile=Log::Log4perl::Appender::File
log4perl.appender.IMAPLogToFile.filename= sub { require Jifty::Util; Jifty::Util->absolute_path("log/imap.log") }
log4perl.appender.IMAPLogToFile.mode=append
log4perl.appender.IMAPLogToFile.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.IMAPLogToFile.layout.ConversionPattern=%d %p> %m%n
log4perl.appender.IMAPLogToFile.syswrite=1
log4perl.appender.IMAPLogToFile.utf8=1

# DJabberd as well
log4perl.logger.DJabberd = INFO, DJabberdLog
log4perl.logger.DJabberd.DNS = DEBUG
log4perl.logger.DJabberd.Hook = WARN
log4perl.logger.DJabberd.Connection.XML = WARN
log4perl.additivity.DJabberd = 0
log4perl.appender.DJabberdLog=Log::Log4perl::Appender::File
log4perl.appender.DJabberdLog.filename= sub { require Jifty::Util; Jifty::Util->absolute_path("log/djabberd.log") }
log4perl.appender.DJabberdLog.mode=append
log4perl.appender.DJabberdLog.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.DJabberdLog.layout.ConversionPattern=%d %p> %F{1}:%L %M - %m%n
log4perl.appender.DJabberdLog.syswrite=1
log4perl.appender.DJabberdLog.utf8=1

# Session-cleaner
log4perl.logger.session-cleaner = INFO, SessionCleanerLog
log4perl.additivity.session-cleaner = 0
log4perl.appender.SessionCleanerLog=Log::Log4perl::Appender::File
log4perl.appender.SessionCleanerLog.filename= sub { require Jifty::Util; Jifty::Util->absolute_path("log/session-cleaner.log") }
log4perl.appender.SessionCleanerLog.mode=append
log4perl.appender.SessionCleanerLog.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.SessionCleanerLog.layout.ConversionPattern=%d %p> %F{1}:%L %M - %m%n
log4perl.appender.SessionCleanerLog.syswrite=1
log4perl.appender.SessionCleanerLog.utf8=1
