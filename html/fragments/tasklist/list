<%args>
$brief => 0
$tokens => undef
$ids => undef
$page => undef
$render_submit => undef
$item_path => undef
$new_item_path =>undef
$all => undef
$title => undef
$moniker => undef
$tasklist_class => undef
$search_open => 0
$search_open_when_empty => 0
$bulk_edit => 0
$hide_paging => 0
$hide_feeds => 0
$hide_actions => 0
$hide_sorting => 0
$break_by_sorting => 0
$read_only => 0
$suggest_tasks => 1
$refresh_on_create => ''
$maybe_show_group => 0
$show_project => undef
$show_milestone => undef
$show_list_link => 0
$show_checkbox => 1
$show_context_menu => 1
$hide_creators => undef
$per_page => undef
$reassign => 0
$prioritize_assign => 0
$schedule_for => undef
$refresh_on_schedule => ''
$print => 0
</%args>
<%init>
my $PER_PAGE = $per_page || Jifty->web->current_user->user_object->per_page;
$page = -1 unless $PER_PAGE;

my $collection = BTDT::Model::TaskCollection->new();
my @tokens = $collection->split_tokens($tokens);
if ($ids) {
    for (split ' ', $ids) {
        my $task = BTDT::Model::Task->new;
        $task->load($_);
        $collection->add_record($task);
    }
} else {

    $collection->from_tokens(@tokens);

    if ($page and $page != -1 and (not $brief or $per_page)) {
        $collection->set_page_info(
                                   current_page => $page,
                                   per_page     => $PER_PAGE
                                  );
    }
}

my $nothing_to_do = $collection->pager->total_entries == 0 && $collection->count == 0;

my $searchpath = BTDT::Model::TaskCollection->join_tokens_url("", "list", @tokens);

if (!defined($tasklist_class)) {
    $tasklist_class = 'tasklist '
                    . ($brief ? 'brief_tasklist' : '');
}

my $tasklist_id = 'tasklist-' . $tokens;
   $tasklist_id =~ s/ /-/g;

my $bulk_edit_action;
if($bulk_edit) {
    $bulk_edit_action = Jifty->web->new_action(
        class       => 'BulkUpdateTasks',
        moniker     => 'bulk_edit',
    );

    Jifty->web->form->register_action($bulk_edit_action);

    $hide_creators = 1 if !defined($hide_creators);
}


my $fragment_path = '/__jifty/empty';
if ($search_open or ($search_open_when_empty
                        and $collection->pager->total_entries == 0
                        and $collection->count == 0))
{
    $fragment_path = "/fragments/tasklist/search_options";
}

my $region = Jifty::Web::PageRegion->new(
    name => Jifty->web->current_region->name . "otherstuff",
    path => $fragment_path
);

my $show_new_taskbar = sub {
    if (!$read_only && !$hide_creators && !$bulk_edit && $new_item_path) {
        $m->out(
            Jifty->web->region(
                name => 'new_item',
                path => $new_item_path,
                defaults => {
                    tokens => $tokens,
                    searchpath => $searchpath,
                    refresh_list => ($nothing_to_do ? 1 : 0),
                    refresh_on_create => $refresh_on_create,
                    item_path => $item_path,
                    print => $print,
                },
            )
        );
    }
};

</%init>
%  Jifty->web->form->print_action_registration('bulk_edit') if $bulk_edit;

<span class="tasklist-fragment">

% if ($title) {
<h2 class="inline">
  <%$title%>
%     if ( $title eq 'But first...' or $title eq 'And then...' ) {
(<% Jifty->web->link(
        label   => "close",
        onclick => [
                        { refresh => Jifty->web->current_region->parent},
                        { replace_with => '/__jifty/empty' },
                    ]
   )
%>)
%     }
</h2>
% }

% unless ($brief or $hide_feeds) {
<& /_elements/feed_list_for_search, tokens => \@tokens &>
% }

% unless ($brief or $hide_actions) {

<div id="actions_container">
<ul class="actions">

% if (!$hide_creators) {
<li><% 
Jifty->web->link(
    label   => 'Braindump',
    onclick => [
        {   
            region       => $region->qualified_name,
            replace_with => '/fragments/tasklist/braindump',
            effect       => 'BlindDown',
            toggle       => 1,
	    args 	 => {'suggest_tasks' => $suggest_tasks, 
	    		    },

        }
    ]
    )
%></li> |
% }

<li><% 

Jifty->web->link(
    label   => 'Search',
    id      => 'search',
    onclick => [
        {  
            region       => $region->qualified_name,
            replace_with => '/fragments/tasklist/search_options',
            effect       => 'BlindDown',
            toggle       => 1,
        }
    ]
    )

%></li>

% if ( Jifty->web->current_user->pro_account ) {
% my $list = BTDT::Model::List->new();
% $list->load_by_cols( owner => Jifty->web->current_user->id, tokens => join( ' ', @tokens ) );
% unless ($list->id) {
| <li><% 

Jifty->web->link(
    label   => 'Save List',
    id      => 'save_list',
    onclick => [
        {  
            region       => $region->qualified_name,
            replace_with => '/fragments/tasklist/save_list',
            effect       => 'BlindDown',
            toggle       => 1,
            args         => { searchpath => $searchpath },
        }
    ]
    )

%></li>
% }

% if (!$nothing_to_do && Jifty->web->current_user->has_feature('TimeTracking')) {
| <li><% Jifty->web->link(
    label   => 'Time Tracking',
    id      => 'time_tracking',
    onclick => [
        {  
            region       => $region->qualified_name,
            replace_with => '/fragments/tasklist/time',
            effect       => 'BlindDown',
            toggle       => 1,
            args         => { searchpath => $searchpath },
        }
    ]
) %></li>
% }

% }
% if (not $nothing_to_do) {
| <li><a href="#" id="<% $tasklist_id %>-toggle" onclick="BTDT.Util.toggleTasklistSavedState('<% $tasklist_id %>'); return false;"><% _('Hide Details') %></a> </li>
% }

% if ( not $nothing_to_do or $bulk_edit ) {
| <li>
<% Jifty->web->link(
    label   => $bulk_edit ? 'Exit Bulk Update' : 'Bulk Update',
    onclick => [{ args   => { bulk_edit => !$bulk_edit } },
        {  
            region       => $region->qualified_name,
            replace_with => '/__jifty/empty',
        }
    ] ) %>
</li>
% }

% if (0){
| <li>
<% Jifty->web->link(
    label   => 'Text Editor (BETA)',
    onclick => [
        {   
            region       => $region->qualified_name,
            popout => '/fragments/tasklist/text_edit',
            args        => { tokens => $tokens},
            effect       => 'Appear',
            toggle       => 1,
        }
    ]
    )


%></li>
% }

%# | <li> <% Jifty->web->link( label => "Refresh", onclick => { refresh_self => 1 } ) %></li>
% if (!$nothing_to_do and !$brief) {
| <li> <%Jifty->web->tangent( url => "/review".$searchpath, label => "Task Review")%> </li>
% }
</ul>
</div>
<& /_elements/clear &>
<div class="tasklist_panel_region">
<% $region->render %>
</div>
% if ( 0 and not $nothing_to_do and not $bulk_edit ) {
<div class="inline_help">
  <p class="hint">
    Check off tasks as you complete them, using the checkboxes to the left of the summary.
  </p>
</div>
% }

% }
<& /_elements/clear &>



% if($bulk_edit) {
<%
   Jifty->web->region(
       name     => 'bulk_edit',
       path     => '/fragments/tasklist/bulk_edit',
       defaults => {
	   tasklist_region  => Jifty->web->current_region->name,
	   tokens	    => $tokens,
	   moniker	    => $bulk_edit_action->moniker,
	  }
   ) %>
% }

% if($bulk_edit) {
<div class="bulk-update-explanation note">
  Bulk Update will operate on only the tasks you see below.
  <% BTDT->contextual_help(
        'reference/tasklists/bulk-update',
        label => 'Read more about Bulk Update' ) %>.
</div>
% }

% unless ($brief or $hide_paging or not $PER_PAGE) {
<& /_elements/tasklist_paging, page => $page, collection => $collection, per_page => $PER_PAGE &>
% }

% if (!Jifty->web->current_user->user_object->taskbar_on_bottom) {
% $show_new_taskbar->();
% }

% if ($nothing_to_do and not $brief) {
  <div class="zilch_message">
% my $type  = 'default';
%# Double escape email so that we'll successfully match the doubly escaped searchpath
% my $email = URI::Escape::uri_escape(URI::Escape::uri_escape_utf8(Jifty->web->current_user->user_object->email));
% if    ( $searchpath !~ m[(?<!not)/owner/(?:me|\Q$email\E)]i ) { $type = 'notme' }
% elsif ( $searchpath !~ m[(?:(?:not|will(?:/never)?)/complete|not/hidden/forever)]i
%         and $searchpath =~ m[/complete]i )                    { $type = 'complete' }

% if ( $type eq 'notme' ) {
    <p>There are no tasks like that.  Maybe you should assign some?</p>
% } elsif ( $type eq 'complete' ) {
    <p>There are no tasks like this that you've completed.  Get cracking!</p>
% } else {
    <p>You must have something you need to get done.  Try one of these:</p>
    <ul>
      <li>
        <% Jifty->web->link( label => 'Braindump', url => '/braindump' ) %>
        and get everything out of your head.
      </li>
%# Hack to skip this when displaying "Later"
% my $later = "/list/owner/me/not/complete/hidden/until/after/today";
% if ( $later !~ /\Q$searchpath\E?$/ ) {
      <li>
        Get a jump start on
        <%
            Jifty->web->link(
                label => 'tasks for later',
                url   => $later
            )
        %>.
      </li>
% }
% my $group_unowned = '/list/owner/nobody/not/complete/but_first/nothing/not/group/personal';
% if (     $searchpath !~ /^\Q$group_unowned\E/
%      and Jifty->web->current_user->user_object->groups->count ) {
      <li>
        Pick up a few
        <%
            Jifty->web->link(
                label => 'unowned tasks',
                url   => $group_unowned
            )
        %>
        in <% Jifty->web->link( label => 'your groups', url => '/groups' ) %>.
      </li>
% }
% my $overdue = '/list/owner/me/not/complete/due/before/tomorrow';
% if ($searchpath !~ /^\Q$overdue\E/) {
      <li>
        Finish up those
        <%
            Jifty->web->link(
                label => 'overdue tasks',
                url   => $overdue
            )
        %>.
      </li>
% }
% my $relax = qw(catsinsinks kittenbreak)[rand(1000) % 2];
      <li><a href="http://<% $relax %>.com" target="_new">Relax</a>!</li>
    </ul>
% }
  </div>
% }

% if ($collection->count and $render_submit) { 
<% Jifty->web->form->submit( label =>  "Save", class => "ajaxduplicates" ) %>
% }

<dl class="<% $tasklist_class %>" id="<% $tasklist_id %>">
<%perl>

my $prev;
my $items_this_sort = 0;
my ($sort) = (grep {$_} map {$_->{display}} @{$collection->order_by});

my $is_new_sort_list = sub {
    return 1 if not defined $prev;
    return 1 if $prev ne $sort->(@_);
    return 0;
};

my $peek;
while ( my $item = ($peek || $collection->next) ) {
    undef $peek;

    if ($sort && $is_new_sort_list->($item)) {
        my $value = $sort->($item);
        $m->out("<h3>".Jifty->web->escape($value)."</h3>") unless $hide_sorting;
        $prev = $value;
    }

    my $show_group = ($maybe_show_group
                      and $item->group_id
                      and $searchpath =~ /(?<!not\/)group\/\Q@{[$item->group_id]}\E(?:\/|$)/)
                            ? 0 : 1;
    my %defaults = (
        id                  => $item->id,
        searchpath          => $searchpath,
        tokens              => $tokens,
        bulk_edit           => $bulk_edit ? $bulk_edit_action->moniker : undef,
        brief               => $brief,
        show_group          => $show_group,
        show_project        => $show_project,
        show_milestone      => $show_milestone,
        prioritize_assign   => $prioritize_assign,
        reassign            => $reassign,
        read_only           => $read_only,
        show_checkbox       => $show_checkbox,
        show_context_menu   => $show_context_menu,
        schedule_for        => $schedule_for,
        refresh_on_schedule => $refresh_on_schedule,
    );

    Jifty->web->region(
        name     => 'item-' . $item->id,
        path     => $item_path,
        defaults => { %defaults },
    );

    if ($sort && $break_by_sorting) {
        if (++$items_this_sort >= 10) {
            $items_this_sort = 0;

            # collect all tasks remaining in this sort sublist...
            my @ids;
            while (my $delay = $collection->next) {
                if ($is_new_sort_list->($delay)) {
                    # new sort list, so we want to display this using the
                    # regular display code
                    $peek = $delay;
                    last;
                }
                push @ids, $delay->id;
            }

            # ...and hide them behind a link
            if (@ids) {
                Jifty->web->region(
                    name     => 'item-sublist-' . join('-', @ids),
                    path     => '/fragments/tasklist/sublist',
                    defaults => {
                        %defaults,
                        item_path => $item_path,
                        ids       => (join ' ', @ids),
                    },
                );
            }

            # we've already exhausted the list, we don't want to start over
            last if !$peek;
        }
    }
}

</%perl>
</dl>

% if (Jifty->web->current_user->user_object->taskbar_on_bottom) {
% $show_new_taskbar->();
% }

% unless ($brief or $hide_paging or $collection->count < 4 or not $PER_PAGE) {
<& /_elements/tasklist_paging, page => $page, collection => $collection, per_page => $PER_PAGE &>
% }

% if ($collection->count and $render_submit) { 
<% Jifty->web->form->submit( label =>  "Save", class => "ajaxduplicates" ) %>
% }

% if ( ( $brief or $show_list_link ) and $collection->tokens && !$nothing_to_do) {
<% Jifty->web->link( label => 'Tasks as new list', url => "/list/" . join('/', $collection->tokens) ) %>
% }

</span>
