   jrv      jesse[hm]     To the best of my knowledge, this scheme does stop an attacker from obtaining the user's password.  Nothing short of proper
                          end-to-end encryption is going to prevent hijacking
   mycroft  jesse[]       Given that your plaintext session is subject to hijacking by someone in the path *anyway*...
   ctl      jesse[hm]     The code as written enables a spoofer on the same subnet to easily obtain the password.
   jrv      jesse[hm]     If we were dealing with money, we'd be using proper end-to-end encryption.  That's most certainly a cost of doing business.
   jrv      jesse[hm]     An offline brute-force attack against the md5sum sent?
   ctl      jesse[hm]     
       To clarify, the code appears to have an explicit special case for
       'token == ""' which falls back to plaintext password.
   jrv      jesse[hm]     ah.  a bogus-token injection.
   jrv      jesse[hm]     The client code should only be doing that when there's no XMLHttpRequest available.  That should be quite fixable.
   ctl      jesse[hm]     The actual MD5sum seems reasonably robust to plaintext password extraction.
   mycroft  jesse[]       You also want to be careful that you include a client-generated nonce after the "token", so that you can't use a dictionary
                          attack by substituting a known token.
   ctl      jesse[hm]     The code as it exists is susceptible to the dictionary attack mycroft alludes to.
   mycroft  jesse[]       (when calculating the md5sum, that is)
-> ctl      jesse[]       
       Also, note that it would be easy enough for a spoofer to force token
       == "" by sending a proper xmlhttpresponse.
   jrv      jesse[]       right.  once you pointed it out it makes perfect sense.
   jrv      jesse[]       Anything else we should look at while overhauling that code? (We spent a fair bit of time attempting to determine if anyone
                          had a published _good_ practice for this and came up with...nothing)
   ctl      jesse[hm]     Even given the (mostly inevitable) inability to provide integrity against hijacking, you could probably adopt something like
                          SRP to improve the password exchange.
   mycroft  jesse[]       I thought this had been done before; e.g.  with IMAP's CRAM-MD5.  But I haven't actually looked at how that works, so I can't 
                          vouch for it.
   jrv      jesse[]       Sorry.  In the HTTP space.
   ctl      jesse[]       I am not aware of anything that would pass an expert's muster.
   ctl      jesse[]       SRP is arguably the "best practice" for the abstract exchange.
   jrv      jesse[]       It's the web.  Everything is crap.  I appreciate the two of you taking time to point out flaws in our crap and suggest
                          improvements.
   mycroft  jesse[]       Sure.  But I thought your motto was "our crap is just a little bit better".  ;-)
   jrv      jesse[]       It is a little bit better.  ;)
   ctl      jesse[]       Well, this is a little bit better than a plaintext password.  It's even a little bit better than XORing the password with the
                          byte "42" (what AIM does/did).
   mycroft  jesse[]       LiveJournal used to be subject to similar attacks.  I haven't checked recently.
   jrv      jesse[]       To my knowledge, LJ's protocol has no features that ours does not
